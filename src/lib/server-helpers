
// only call these from the server!

import { cacheClear } from "$plasmid/utils/cache.js";
import { endo, endoloader } from '$plasmid/modules/cytosis2';
import { PUBLIC_PROJECT_NAME, PUBLIC_ENDOCYTOSIS_URL, PUBLIC_FUZZYKEY_URL } from '$env/static/public';

export async function resetBlog(key) {
  // don't forget to add project-name before the key (in the calling function!)
  cacheClear(key)
  const url = `${PUBLIC_FUZZYKEY_URL}/?key=${key}`;
  const response = await fetch(url, { method: 'DELETE' });
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  console.log('[api/reload]: reset üëç', key)
  return true
}


// just call endloader directly here; skip blogalogloader
// we don't wait for data; this is meant to fire off the loader on CF separately
export async function reloadBlog(blog) {
  let endoloader_config = {
    "sources": [
      {
        "name": "site-pagedata",
        "type": "cfnotion",
        "path": `/collection/${blog['Pagedata ID']}`,
        "loaders": {
          "notionPageId": "id"
        },
      },
    ]
  }

  // no async; just let the server do its job; will finish in about 30s
  // let data = await endoloader(endoloader_config, {
  endoloader(endoloader_config, {
    key: `${PUBLIC_PROJECT_NAME}-${blog['Slug']}`,
    url: PUBLIC_ENDOCYTOSIS_URL,
  })
  // return data

  // await loadBlogalogFromPath({blogPath: key, blogs})
  console.log('[api/reload]: reloaded üëç', blog['Slug'])
  return true
}

